{"version":3,"sources":["../../src/util.js"],"names":["__Formatter","number","val","_","isInteger","nFormatter","toFixed","num","digits","si","value","symbol","rx","i","length","replace","__UUID","create","$item"],"mappings":"AAAA;;AAEA;;;;AAGA,IAAIA,cAAc,IAAI,YAAY;AAC9B;;;AAGA,SAAKC,MAAL,GAAc,UAAUC,GAAV,EAAe;AACzB,YAAIC,EAAEC,SAAF,CAAYF,GAAZ,CAAJ,EAAsB;AAClB,mBAAOG,WAAWH,GAAX,EAAgB,CAAhB,CAAP;AACH,SAFD,MAEO;AACH,mBAAOA,IAAII,OAAJ,CAAY,CAAZ,CAAP;AACH;AACJ,KAND;;AAQA,aAASD,UAAT,CAAoBE,GAApB,EAAyBC,MAAzB,EAAiC;AAC7B,YAAIC,KAAK,CAAC,EAAEC,OAAO,IAAT,EAAeC,QAAQ,GAAvB,EAAD,EAA+B,EAAED,OAAO,IAAT,EAAeC,QAAQ,GAAvB,EAA/B,EAA6D,EAAED,OAAO,IAAT,EAAeC,QAAQ,GAAvB,EAA7D,EAA2F,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAA3F,EAAwH,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAxH,EAAqJ,EAAED,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAArJ,CAAT;AAAA,YACIC,KAAK,0BADT;AAAA,YAEIC,CAFJ;AAGA,aAAKA,IAAI,CAAT,EAAYA,IAAIJ,GAAGK,MAAnB,EAA2BD,GAA3B,EAAgC;AAC5B,gBAAIN,OAAOE,GAAGI,CAAH,EAAMH,KAAjB,EAAwB;AACpB,uBAAO,CAACH,MAAME,GAAGI,CAAH,EAAMH,KAAb,EAAoBJ,OAApB,CAA4BE,MAA5B,EAAoCO,OAApC,CAA4CH,EAA5C,EAAgD,IAAhD,IAAwDH,GAAGI,CAAH,EAAMF,MAArE;AACH;AACJ;AACD,eAAOJ,IAAID,OAAJ,CAAYE,MAAZ,EAAoBO,OAApB,CAA4BH,EAA5B,EAAgC,IAAhC,CAAP;AACH;AACJ,CAvBiB,EAAlB;;AAyBA,IAAII,SAAS,IAAI,YAAY;AACzB,SAAKC,MAAL,GAAc,UAAUC,KAAV,EAAiB,CAAE,CAAjC;AACH,CAFY,EAAb;AAGA","file":"util.js","sourcesContent":["\"use strict\";\n\n/**\r\n * Created by hyunwoo on 2017-02-20.\r\n */\nvar __Formatter = new function () {\n    /**\r\n     * @return {string}\r\n     */\n    this.number = function (val) {\n        if (_.isInteger(val)) {\n            return nFormatter(val, 1);\n        } else {\n            return val.toFixed(2);\n        }\n    };\n\n    function nFormatter(num, digits) {\n        var si = [{ value: 1E18, symbol: \"E\" }, { value: 1E15, symbol: \"P\" }, { value: 1E12, symbol: \"T\" }, { value: 1E9, symbol: \"G\" }, { value: 1E6, symbol: \"M\" }, { value: 1E3, symbol: \"k\" }],\n            rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/,\n            i;\n        for (i = 0; i < si.length; i++) {\n            if (num >= si[i].value) {\n                return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\n            }\n        }\n        return num.toFixed(digits).replace(rx, \"$1\");\n    }\n}();\n\nvar __UUID = new function () {\n    this.create = function ($item) {};\n}();\n//# sourceMappingURL=util.js.map"]}