{"version":3,"sources":["../../src/parallel.axis.js"],"names":["ParallelAxis","controller","axis","stats","_","assign","x","vertices","index","axisDestPosition","height","color","axisDestColor","r","g","b","val","ratio","min","max","y","z","v","THREE","Vector3","multiplyScalar","Setting","Radvis","NodeScale"],"mappings":"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","file":"parallel.axis.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-17.\r\n */\r\nclass ParallelAxis {\r\n    constructor(controller, axis, stats) {\r\n        this.controller = controller;\r\n        this.axis = axis;\r\n        _.assign(this, stats);\r\n\r\n    }\r\n\r\n\r\n    setPosition(x) {\r\n        this.controller.vertices[this.axis.index * 6] = this.controller.axisDestPosition[this.axis.index * 6] = x;\r\n        this.controller.vertices[this.axis.index * 6 + 1] = this.controller.axisDestPosition[this.axis.index * 6 + 1] = 0;\r\n        this.controller.vertices[this.axis.index * 6 + 2] = this.controller.axisDestPosition[this.axis.index * 6 + 2] = 0;\r\n        this.controller.vertices[this.axis.index * 6 + 3] = this.controller.axisDestPosition[this.axis.index * 6 + 3] = x;\r\n        this.controller.vertices[this.axis.index * 6 + 4] = this.controller.axisDestPosition[this.axis.index * 6 + 4] = this.controller.height / 2;\r\n        this.controller.vertices[this.axis.index * 6 + 5] = this.controller.axisDestPosition[this.axis.index * 6 + 5] = 0;\r\n    }\r\n\r\n    setColor(color) {\r\n        this.controller.axisDestColor[this.axis.index * 6] = color.r;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 1] = color.g;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 2] = color.b;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 3] = color.r;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 4] = color.g;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 5] = color.b;\r\n    }\r\n\r\n    get bottom() {\r\n        return THREE.Vector3(\r\n            this.controller.axisDestPosition[this.axis.index * 6],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 1],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 2],\r\n        );\r\n    }\r\n\r\n    get top() {\r\n        return THREE.Vector3(\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 3],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 4],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 5],\r\n        );\r\n    }\r\n\r\n\r\n    located(val) {\r\n        var ratio = (val - this.min) / (this.max - this.min);\r\n        var x = this.controller.axisDestPosition[this.axis.index * 6] * ratio;\r\n        var y = this.controller.axisDestPosition[this.axis.index * 6 + 1] * ratio +\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 4] * (1 - ratio);\r\n        var z = this.controller.axisDestPosition[this.axis.index * 6 + 5] * ratio;\r\n        var v = new THREE.Vector3(x, y, z).multiplyScalar(Setting.Radvis.NodeScale);\r\n        return v;\r\n    }\r\n}"]}