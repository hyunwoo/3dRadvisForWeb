{"version":3,"sources":["../../src/radvis.core.js"],"names":["RadvisController","scene","data","that","groupAxis","THREE","Group","groupNode","i","axises","_","forEach","axis","a","name","RadvisAxis","stats","geometryBasket","BufferGeometry","material","LineBasicMaterial","vertexColors","VertexColors","transparent","axisLength","length","axisDestPosition","Float32Array","Setting","Radvis","Geometry","BasketCount","axisDestColor","vertices","colors","indices","addAttribute","BufferAttribute","setDynamic","x","z","axisColor","Color","Axis","map","Math","sin","PI","index","Radius","cos","setPosition","setColor","createBasketTopBottom","setIndex","Uint16Array","computeBoundingSphere","axisMesh","LineSegments","add","uniforms","color","value","texture","TextureLoader","load","nodeMaterial","ShaderMaterial","vertexShader","document","getElementById","textContent","fragmentShader","depthTest","console","log","geometryNodes","nodes","numericNodes","nodeCount","nodeDestPositions","nodePositions","nodeDestColors","nodeColors","nodeDestSize","nodeSizes","i3","random","Height","setHSL","NodeSize","Points","updateNodes","lerp","y","r","g","b","size","activeAxisLength","filter","d","active","cnt","weightSum","sumBy","weight","rad","Background","node","poses","v","k","push","located","p","setNodePosition","updateAxis","lastIdx","__RadvisController","createRadvis","renderer","controls","group","camera","container","init","$renderer","$","width","height","PerspectiveCamera","position","lookAt","Scene","__data","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","setClearColor","gammaInput","gammaOutput","appendChild","domElement","OrbitControls","enableZoom","Stats","dom","attr","render","update","animate","attributes","needsUpdate","customColor","requestAnimationFrame"],"mappings":"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","file":"radvis.core.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-14.\r\n */\r\n\r\n\r\n// Line Segment Required\r\n\r\n\r\n// Basket Line Segment : Flex Length\r\n// Node BufferGeometry : Static Length **\r\n\r\n// ** ���Ͽ� ������ �и��Ѵ� **\r\n\r\nclass RadvisController {\r\n    constructor(scene, data) {\r\n        var that = this;\r\n        this.data = data;\r\n        this.groupAxis = new THREE.Group();\r\n        this.groupNode = new THREE.Group();\r\n\r\n        let i;\r\n        // Axis Data\r\n        this.axises = {};\r\n        _.forEach(data.axis, function (a, i) {\r\n            that.axises[a.name] = new RadvisAxis(that, a, data.stats[a.name]);\r\n        });\r\n\r\n\r\n        // Axis Geometry\r\n        this.geometryBasket = new THREE.BufferGeometry();\r\n        this.material = new THREE.LineBasicMaterial({\r\n            vertexColors: THREE.VertexColors,\r\n            transparent: true\r\n        });\r\n\r\n        this.axisLength = data.axis.length;\r\n        this.axisDestPosition = new Float32Array(this.axisLength * 3 * 2 + Setting.Radvis.Geometry.BasketCount * 6);\r\n        this.axisDestColor = new Float32Array(this.axisLength * 3 * 2 + Setting.Radvis.Geometry.BasketCount * 6);\r\n        this.vertices = new Float32Array(this.axisLength * 3 * 2 + Setting.Radvis.Geometry.BasketCount * 6);\r\n        this.colors = new Float32Array(this.axisLength * 3 * 2 + Setting.Radvis.Geometry.BasketCount * 6);\r\n        this.indices = [];\r\n        this.geometryBasket.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3).setDynamic(true));\r\n        this.geometryBasket.addAttribute('color', new THREE.BufferAttribute(this.colors, 3).setDynamic(true));\r\n\r\n        let x, z;\r\n\r\n        const axisColor = new THREE.Color(Setting.Radvis.Axis.Color);\r\n        _.map(this.axises, function (axis) {\r\n            x = Math.sin(Math.PI * 2 / that.axisLength * axis.axis.index) * Setting.Radvis.Radius;\r\n            z = Math.cos(Math.PI * 2 / that.axisLength * axis.axis.index) * Setting.Radvis.Radius;\r\n            axis.setPosition(x, z);\r\n            axis.setColor(axisColor);\r\n        });\r\n\r\n        this.createBasketTopBottom(axisColor);\r\n\r\n        this.geometryBasket.setIndex(new THREE.BufferAttribute(new Uint16Array(this.indices), 1));\r\n        this.geometryBasket.computeBoundingSphere();\r\n        this.axisMesh = new THREE.LineSegments(this.geometryBasket, this.material);\r\n\r\n        this.groupAxis.add(this.axisMesh);\r\n\r\n        // Nodes Data\r\n\r\n        // Nodes Geometry\r\n        const uniforms = {\r\n            color: {value: new THREE.Color(0xffffff)},\r\n            texture: {value: new THREE.TextureLoader().load(\"textures/radvis/node.png\")}\r\n        };\r\n        this.nodeMaterial = new THREE.ShaderMaterial({\r\n            uniforms: uniforms,\r\n            vertexShader: document.getElementById('vertexshader').textContent,\r\n            fragmentShader: document.getElementById('fragmentshader').textContent,\r\n            depthTest: false,\r\n            transparent: true\r\n        });\r\n\r\n        console.log(data);\r\n        this.geometryNodes = new THREE.BufferGeometry();\r\n\r\n        this.nodes = data.numericNodes;\r\n        this.nodeCount = data.numericNodes.length;\r\n        this.nodeDestPositions = new Float32Array(this.nodeCount * 3);\r\n        this.nodePositions = new Float32Array(this.nodeCount * 3);\r\n\r\n        this.nodeDestColors = new Float32Array(this.nodeCount * 3);\r\n        this.nodeColors = new Float32Array(this.nodeCount * 3);\r\n\r\n        this.nodeDestSize = new Float32Array(this.nodeCount);\r\n        this.nodeSizes = new Float32Array(this.nodeCount);\r\n\r\n        let color = new THREE.Color();\r\n        var i3;\r\n        for (i = 0, i3 = 0; i < this.nodeCount; i++, i3 += 3) {\r\n            this.nodeDestPositions[i3] = ( Math.random() * 2 - 1 ) * Setting.Radvis.Radius;\r\n            this.nodeDestPositions[i3 + 1] = ( Math.random() * 2 - 1 ) * Setting.Radvis.Height * 0.5;\r\n            this.nodeDestPositions[i3 + 2] = ( Math.random() * 2 - 1 ) * Setting.Radvis.Radius;\r\n            color.setHSL(1.0, 0, 0);\r\n            this.nodeDestColors[i3] = 1;\r\n            this.nodeDestColors[i3 + 1] = 0;\r\n            this.nodeDestColors[i3 + 2] = 0;\r\n            this.nodeSizes[i] = Setting.Radvis.NodeSize;\r\n        }\r\n\r\n        this.geometryNodes.addAttribute('position', new THREE.BufferAttribute(this.nodePositions, 3));\r\n        this.geometryNodes.addAttribute('customColor', new THREE.BufferAttribute(this.nodeColors, 3));\r\n        this.geometryNodes.addAttribute('size', new THREE.BufferAttribute(this.nodeSizes, 1));\r\n\r\n        this.groupNode = new THREE.Points(this.geometryNodes, this.nodeMaterial);\r\n\r\n        console.log(this.geometryNodes);\r\n        scene.add(this.groupNode);\r\n        scene.add(this.groupAxis);\r\n\r\n        this.updateNodes();\r\n    }\r\n\r\n\r\n    animate() {\r\n        let i;\r\n        for (i = 0; i < this.axisLength * 6; i++) {\r\n            this.vertices[i] = THREE.Math.lerp(this.vertices[i], this.axisDestPosition[i], 0.1);\r\n            this.colors[i] = THREE.Math.lerp(this.colors[i], this.axisDestColor[i], 0.1);\r\n        }\r\n        for (i = this.axisLength * 6; i < (this.axisLength + Setting.Radvis.Geometry.BasketCount) * 6; i++) {\r\n            this.colors[i] = THREE.Math.lerp(this.colors[i], this.axisDestColor[i], 0.1);\r\n        }\r\n\r\n        for (i = 0; i < this.nodeCount; i++) {\r\n            this.nodePositions[i * 3] = THREE.Math.lerp(this.nodePositions[i * 3], this.nodeDestPositions[i * 3], 0.1);\r\n            this.nodePositions[i * 3 + 1] = THREE.Math.lerp(this.nodePositions[i * 3 + 1], this.nodeDestPositions[i * 3 + 1], 0.1);\r\n            this.nodePositions[i * 3 + 2] = THREE.Math.lerp(this.nodePositions[i * 3 + 2], this.nodeDestPositions[i * 3 + 2], 0.1);\r\n\r\n            this.nodeColors[i * 3] = THREE.Math.lerp(this.nodeColors[i * 3], this.nodeDestColors[i * 3], 0.1);\r\n            this.nodeColors[i * 3 + 1] = THREE.Math.lerp(this.nodeColors[i * 3 + 1], this.nodeDestColors[i * 3 + 1], 0.1);\r\n            this.nodeColors[i * 3 + 2] = THREE.Math.lerp(this.nodeColors[i * 3 + 2], this.nodeDestColors[i * 3 + 2], 0.1);\r\n\r\n            this.nodePositions[i] = THREE.Math.lerp(this.nodePositions[i], this.nodeDestPositions[i], 0.1);\r\n        }\r\n\r\n    }\r\n\r\n    setNodePosition(index, x, y, z) {\r\n        this.nodeDestPositions[index * 3] = x;\r\n        this.nodeDestPositions[index * 3 + 1] = y;\r\n        this.nodeDestPositions[index * 3 + 2] = z;\r\n    }\r\n\r\n    setNodeColor(index, r, g, b) {\r\n        this.nodeDestColors[index * 3] = r;\r\n        this.nodeDestColors[index * 3 + 1] = g;\r\n        this.nodeDestColors[index * 3 + 2] = b;\r\n    }\r\n\r\n    setNodeSize(index, size) {\r\n        this.nodeDestSize[index] = size;\r\n    }\r\n\r\n    updateAxis() {\r\n        var activeAxisLength = _.filter(this.data.axis, function (d) {\r\n            return d.active\r\n        }).length;\r\n\r\n        let cnt = 0;\r\n\r\n        const weightSum = _.sumBy(this.axises, function (d) {\r\n            return d.axis.weight\r\n        });\r\n        let weight = 0;\r\n\r\n        const that = this;\r\n        _.forEach(this.axises, function (axis) {\r\n            var rad = Setting.Radvis.Radius;\r\n            var color = new THREE.Color(Setting.Radvis.Axis.Color);\r\n            var x = Math.sin(Math.PI * 2 / activeAxisLength * cnt) * rad;\r\n            var z = Math.cos(Math.PI * 2 / activeAxisLength * cnt) * rad;\r\n\r\n            if (axis.axis.active) cnt++;\r\n            else {\r\n                rad = rad + 200;\r\n                color = new THREE.Color(Setting.Radvis.Background);\r\n                x = Math.sin(Math.PI * 2 / activeAxisLength * (cnt - .8)) * rad;\r\n                z = Math.cos(Math.PI * 2 / activeAxisLength * (cnt - .8)) * rad;\r\n            }\r\n\r\n            axis.setPosition(x, z);\r\n            axis.setColor(color);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    updateNodes() {\r\n        const that = this;\r\n        _.map(this.nodes, function (node, i) {\r\n            var poses = [];\r\n            _.forEach(node, function (v, k) {\r\n                if (!that.axises[k].axis.active) return;\r\n                poses.push(that.axises[k].located(v))\r\n            });\r\n            var x = 0, y = 0, z = 0;\r\n            _.forEach(poses, function (p) {\r\n                x += p.x;\r\n                y += p.y;\r\n                z += p.z;\r\n            });\r\n            that.setNodePosition(i, x / poses.length, y / poses.length, z / poses.length);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    adjustAxis() {\r\n        this.updateAxis();\r\n        this.updateNodes();\r\n    }\r\n\r\n    updateAxisColor(color) {\r\n        let i;\r\n        for (i = this.axisLength; i < this.axisLength + Setting.Radvis.Geometry.BasketCount; i++) {\r\n            this.axisDestColor[i * 6] = color.r;\r\n            this.axisDestColor[i * 6 + 1] = color.g;\r\n            this.axisDestColor[i * 6 + 2] = color.b;\r\n            this.axisDestColor[i * 6 + 3] = color.r;\r\n            this.axisDestColor[i * 6 + 4] = color.g;\r\n            this.axisDestColor[i * 6 + 5] = color.b;\r\n        }\r\n        this.updateAxis();\r\n    }\r\n\r\n    createBasketTopBottom(axisColor) {\r\n        let i, x, z;\r\n        for (i = this.axisLength; i < this.axisLength + Setting.Radvis.Geometry.BasketCount; i++) {\r\n            x = Math.sin(Math.PI * 2 / Setting.Radvis.Geometry.BasketCount * i) * Setting.Radvis.Radius;\r\n            z = Math.cos(Math.PI * 2 / Setting.Radvis.Geometry.BasketCount * i) * Setting.Radvis.Radius;\r\n\r\n            this.vertices[i * 6] = x;\r\n            this.vertices[i * 6 + 1] = -Setting.Radvis.Height / 2;\r\n            this.vertices[i * 6 + 2] = z;\r\n            this.vertices[i * 6 + 3] = x;\r\n            this.vertices[i * 6 + 4] = Setting.Radvis.Height / 2;\r\n            this.vertices[i * 6 + 5] = z;\r\n\r\n            this.axisDestColor[i * 6] = axisColor.r;\r\n            this.axisDestColor[i * 6 + 1] = axisColor.g;\r\n            this.axisDestColor[i * 6 + 2] = axisColor.b;\r\n            this.axisDestColor[i * 6 + 3] = axisColor.r;\r\n            this.axisDestColor[i * 6 + 4] = axisColor.g;\r\n            this.axisDestColor[i * 6 + 5] = axisColor.b;\r\n        }\r\n        for (i = 0; i < this.axisLength; i++) this.indices.push(i * 2, i * 2 + 1);\r\n\r\n        for (i = this.axisLength; i < this.axisLength + Setting.Radvis.Geometry.BasketCount - 1; i++) {\r\n            this.indices.push(i * 2, i * 2 + 2);\r\n            this.indices.push(i * 2 + 1, i * 2 + 2 + 1);\r\n        }\r\n        let lastIdx = this.axisLength + Setting.Radvis.Geometry.BasketCount - 1;\r\n        this.indices.push(lastIdx * 2, this.axisLength * 2 + 2);\r\n        this.indices.push(lastIdx * 2 + 1, this.axisLength * 2 + 2 + 1);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nlet __RadvisController;\r\n\r\n\r\nfunction createRadvis() {\r\n    let stats;\r\n    let renderer, controls;\r\n    let group, scene, camera, container;\r\n\r\n    function init() {\r\n        container = document.getElementById('rendererRadvis');\r\n\r\n        const $renderer = $('#rendererRadvis');\r\n        const width = $renderer.width(), height = $renderer.height();\r\n\r\n        console.log(width, height);\r\n        camera = new THREE.PerspectiveCamera(45, width / height, 1, 5000);\r\n        camera.position.z = 1500;\r\n        camera.position.y = 150;\r\n        camera.lookAt(0, 0, 0);\r\n\r\n        scene = new THREE.Scene();\r\n        __RadvisController = new RadvisController(scene, __data);\r\n        renderer = new THREE.WebGLRenderer({antialias: true});\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(width, height);\r\n        renderer.setClearColor(Setting.Radvis.Background);\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n        container.appendChild(renderer.domElement);\r\n        //scene.add(group);\r\n        controls = new THREE.OrbitControls(camera, renderer.domElement);\r\n        controls.enableZoom = true;\r\n\r\n        stats = new Stats();\r\n        $(stats.dom).attr('id', 'radvisStats');\r\n        container.appendChild(stats.dom);\r\n    }\r\n\r\n    function render() {\r\n        controls.update();\r\n        __RadvisController.animate();\r\n        __RadvisController.geometryBasket.attributes.position.needsUpdate = true;\r\n        __RadvisController.geometryBasket.attributes.color.needsUpdate = true;\r\n\r\n        __RadvisController.geometryNodes.attributes.position.needsUpdate = true;\r\n        __RadvisController.geometryNodes.attributes.customColor.needsUpdate = true;\r\n        __RadvisController.geometryNodes.attributes.size.needsUpdate = true;\r\n\r\n        renderer.render(scene, camera);\r\n        stats.update();\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    init();\r\n    render();\r\n}\r\n"]}