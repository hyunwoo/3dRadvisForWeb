{"version":3,"sources":["../../src/webgl.line.js"],"names":["RadvisController","scene","data","groupAxis","THREE","Group","groupNode","geometryBasket","BufferGeometry","material","LineBasicMaterial","vertexColors","VertexColors","blending","AdditiveBlending","transparent","axisLength","axis","length","axisDestPosition","Float32Array","axisDestColor","vertices","colors","indices","addAttribute","BufferAttribute","setDynamic","radius","x","z","i","Math","sin","PI","cos","push","setIndex","Uint16Array","computeBoundingSphere","mesh","LineSegments","add","uniforms","color","value","Color","texture","TextureLoader","load","nodeMaterial","ShaderMaterial","vertexShader","document","getElementById","textContent","fragmentShader","depthTest","console","log","geometryNodes","nodeCount","nodes","nodeDestPositions","nodePositions","nodeDestColors","nodeColors","nodeDestSize","nodeSizes","i3","random","setHSL","r","g","b","Points","lerp","index","y","size","activeAxisLength","_","filter","d","active","cnt","rad","updateAxis","idx","isNil","Number","__RadvisController","__ParellelController","createRadvis","stats","renderer","controls","group","camera","container","init","PerspectiveCamera","window","innerWidth","innerHeight","position","lookAt","Scene","__data","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","gammaInput","gammaOutput","appendChild","domElement","OrbitControls","enableZoom","Stats","dom","$","attr","render","update","animate","attributes","needsUpdate","customColor","requestAnimationFrame"],"mappings":"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","file":"webgl.line.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-14.\r\n */\r\n\r\n\r\n// Line Segment Required\r\n\r\n\r\n// Basket Line Segment : Flex Length\r\n// Node BufferGeometry : Static Length **\r\n\r\n// ** ���Ͽ� ������ �и��Ѵ� **\r\n\r\nclass RadvisController {\r\n    constructor(scene, data) {\r\n        this.data = data;\r\n        this.groupAxis = new THREE.Group();\r\n        this.groupNode = new THREE.Group();\r\n\r\n\r\n        // Axis Data\r\n\r\n\r\n        // Axis Geometry\r\n        this.geometryBasket = new THREE.BufferGeometry();\r\n        this.material = new THREE.LineBasicMaterial({\r\n            vertexColors: THREE.VertexColors,\r\n            blending: THREE.AdditiveBlending,\r\n            transparent: true\r\n        });\r\n        this.axisLength = data.axis.length;\r\n        this.axisDestPosition = new Float32Array(this.axisLength * 3 * 2);\r\n        this.axisDestColor = new Float32Array(this.axisLength * 3 * 2);\r\n        this.vertices = new Float32Array(this.axisLength * 3 * 2);\r\n        this.colors = new Float32Array(this.axisLength * 3 * 2);\r\n        this.indices = [];\r\n        this.geometryBasket.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3).setDynamic(true));\r\n        this.geometryBasket.addAttribute('color', new THREE.BufferAttribute(this.colors, 3).setDynamic(true));\r\n        this.radius = 500;\r\n\r\n        let x, z, i;\r\n\r\n        for (i = 0; i < this.axisLength; i++) {\r\n            x = Math.sin(Math.PI * 2 / this.axisLength * i) * this.radius;\r\n            z = Math.cos(Math.PI * 2 / this.axisLength * i) * this.radius;\r\n\r\n            this.axisDestPosition[i * 6] = x;\r\n            this.axisDestPosition[i * 6 + 1] = -400;\r\n            this.axisDestPosition[i * 6 + 2] = z;\r\n            this.axisDestPosition[i * 6 + 3] = x;\r\n            this.axisDestPosition[i * 6 + 4] = 400;\r\n            this.axisDestPosition[i * 6 + 5] = z;\r\n\r\n            this.axisDestColor[i * 6] = .5;\r\n            this.axisDestColor[i * 6 + 1] = 0;\r\n            this.axisDestColor[i * 6 + 2] = 0;\r\n            this.axisDestColor[i * 6 + 3] = 0.5;\r\n            this.axisDestColor[i * 6 + 4] = 0.5;\r\n            this.axisDestColor[i * 6 + 5] = 1;\r\n        }\r\n\r\n        for (i = 0; i < this.axisLength; i++) this.indices.push(i * 2, i * 2 + 1);\r\n\r\n        this.geometryBasket.setIndex(new THREE.BufferAttribute(new Uint16Array(this.indices), 1));\r\n        this.geometryBasket.computeBoundingSphere();\r\n        this.mesh = new THREE.LineSegments(this.geometryBasket, this.material);\r\n\r\n        this.groupAxis.add(this.mesh);\r\n\r\n        // Nodes Data\r\n\r\n        // Nodes Geometry\r\n        const uniforms = {\r\n            color: {value: new THREE.Color(0xffffff)},\r\n            texture: {value: new THREE.TextureLoader().load(\"textures/radvis/node.png\")}\r\n        };\r\n        this.nodeMaterial = new THREE.ShaderMaterial({\r\n            uniforms: uniforms,\r\n            vertexShader: document.getElementById('vertexshader').textContent,\r\n            fragmentShader: document.getElementById('fragmentshader').textContent,\r\n            blending: THREE.AdditiveBlending,\r\n            depthTest: false,\r\n            transparent: true\r\n        });\r\n\r\n        console.log(data);\r\n        this.geometryNodes = new THREE.BufferGeometry();\r\n        this.nodeCount = data.nodes.length * 20;\r\n        this.nodeDestPositions = new Float32Array(this.nodeCount * 3);\r\n        this.nodePositions = new Float32Array(this.nodeCount * 3);\r\n\r\n        this.nodeDestColors = new Float32Array(this.nodeCount * 3);\r\n        this.nodeColors = new Float32Array(this.nodeCount * 3);\r\n\r\n        this.nodeDestSize = new Float32Array(this.nodeCount);\r\n        this.nodeSizes = new Float32Array(this.nodeCount);\r\n\r\n        let color = new THREE.Color();\r\n        var i3;\r\n        for (i = 0, i3 = 0; i < this.nodeCount; i++, i3 += 3) {\r\n            this.nodeDestPositions[i3] = ( Math.random() * 2 - 1 ) * this.radius;\r\n            this.nodeDestPositions[i3 + 1] = ( Math.random() * 2 - 1 ) * 400;\r\n            this.nodeDestPositions[i3 + 2] = ( Math.random() * 2 - 1 ) * this.radius;\r\n            color.setHSL(1.0, 1.0, 1);\r\n            this.nodeDestColors[i3] = color.r * 0.2;\r\n            this.nodeDestColors[i3 + 1] = color.g * 0.2;\r\n            this.nodeDestColors[i3 + 2] = color.b * 0.2;\r\n            this.nodeSizes[i] = 20;\r\n        }\r\n\r\n        this.geometryNodes.addAttribute('position', new THREE.BufferAttribute(this.nodePositions, 3));\r\n        this.geometryNodes.addAttribute('customColor', new THREE.BufferAttribute(this.nodeColors, 3));\r\n        this.geometryNodes.addAttribute('size', new THREE.BufferAttribute(this.nodeSizes, 1));\r\n\r\n        this.groupNode = new THREE.Points(this.geometryNodes, this.nodeMaterial);\r\n\r\n        console.log(this.geometryNodes);\r\n        scene.add(this.groupNode);\r\n        scene.add(this.groupAxis);\r\n    }\r\n\r\n    animate() {\r\n        let i;\r\n        for (i = 0; i < this.axisLength * 6; i++) {\r\n            this.vertices[i] = THREE.Math.lerp(this.vertices[i], this.axisDestPosition[i], 0.1);\r\n            this.colors[i] = THREE.Math.lerp(this.colors[i], this.axisDestColor[i], 0.1);\r\n        }\r\n\r\n        for (i = 0; i < this.nodeCount; i++) {\r\n            this.nodePositions[i * 3] = THREE.Math.lerp(this.nodePositions[i * 3], this.nodeDestPositions[i * 3], 0.1);\r\n            this.nodePositions[i * 3 + 1] = THREE.Math.lerp(this.nodePositions[i * 3 + 1], this.nodeDestPositions[i * 3 + 1], 0.1);\r\n            this.nodePositions[i * 3 + 2] = THREE.Math.lerp(this.nodePositions[i * 3 + 2], this.nodeDestPositions[i * 3 + 2], 0.1);\r\n\r\n            this.nodeColors[i * 3] = THREE.Math.lerp(this.nodeColors[i * 3], this.nodeDestColors[i * 3], 0.1);\r\n            this.nodeColors[i * 3 + 1] = THREE.Math.lerp(this.nodeColors[i * 3 + 1], this.nodeDestColors[i * 3 + 1], 0.1);\r\n            this.nodeColors[i * 3 + 2] = THREE.Math.lerp(this.nodeColors[i * 3 + 2], this.nodeDestColors[i * 3 + 2], 0.1);\r\n\r\n            this.nodePositions[i] = THREE.Math.lerp(this.nodePositions[i], this.nodeDestPositions[i], 0.1);\r\n        }\r\n\r\n    }\r\n\r\n    setNodePosition(index, x, y, z) {\r\n        this.nodeDestPositions[index * 3] = x;\r\n        this.nodeDestPositions[index * 3 + 1] = y;\r\n        this.nodeDestPositions[index * 3 + 2] = z;\r\n    }\r\n\r\n    setNodeColor(index, r, g, b) {\r\n        this.nodeDestColors[index * 3] = r;\r\n        this.nodeDestColors[index * 3 + 1] = g;\r\n        this.nodeDestColors[index * 3 + 2] = b;\r\n    }\r\n\r\n    setNodeSize(index, size) {\r\n        this.nodeDestSize[index] = size;\r\n    }\r\n\r\n    updateAxis() {\r\n        var activeAxisLength = _.filter(this.data.axis, function (d) {\r\n            console.log(d.active);\r\n            return d.active\r\n        }).length;\r\n\r\n        let cnt = 0;\r\n\r\n        for (var i = 0; i < this.axisLength; i++) {\r\n            var rad = this.radius;\r\n            var color = .3;\r\n            var x = Math.sin(Math.PI * 2 / activeAxisLength * cnt) * rad;\r\n            var z = Math.cos(Math.PI * 2 / activeAxisLength * cnt) * rad;\r\n\r\n            if (this.data.axis[i].active) cnt++;\r\n            else {\r\n                rad = rad + 200;\r\n                color = 0;\r\n                x = Math.sin(Math.PI * 2 / activeAxisLength * (cnt - .8)) * rad;\r\n                z = Math.cos(Math.PI * 2 / activeAxisLength * (cnt - .8)) * rad;\r\n            }\r\n\r\n            this.axisDestPosition[i * 6] = x;\r\n            this.axisDestPosition[i * 6 + 1] = -400;\r\n            this.axisDestPosition[i * 6 + 2] = z;\r\n            this.axisDestPosition[i * 6 + 3] = x;\r\n            this.axisDestPosition[i * 6 + 4] = 400;\r\n            this.axisDestPosition[i * 6 + 5] = z;\r\n\r\n            this.axisDestColor[i * 6] = color;\r\n            this.axisDestColor[i * 6 + 1] = color;\r\n            this.axisDestColor[i * 6 + 2] = color;\r\n            this.axisDestColor[i * 6 + 3] = color;\r\n            this.axisDestColor[i * 6 + 4] = color;\r\n            this.axisDestColor[i * 6 + 5] = color;\r\n        }\r\n    }\r\n\r\n    adjustAxis() {\r\n        this.updateAxis();\r\n    }\r\n\r\n    setActiveAxis(active, idx) {\r\n        if (_.isNil(active)) active = true;\r\n        idx = Number(idx);\r\n        if (active) {\r\n            this.colors[idx * 6] = 0.5;\r\n            this.colors[idx * 6 + 1] = 0;\r\n            this.colors[idx * 6 + 2] = 0;\r\n            this.colors[idx * 6 + 3] = 0.5;\r\n            this.colors[idx * 6 + 4] = 0.5;\r\n            this.colors[idx * 6 + 5] = 1;\r\n        } else {\r\n            this.colors[idx * 6] = 0;\r\n            this.colors[idx * 6 + 1] = 0;\r\n            this.colors[idx * 6 + 2] = 0;\r\n            this.colors[idx * 6 + 3] = 0;\r\n            this.colors[idx * 6 + 4] = 0;\r\n            this.colors[idx * 6 + 5] = 0;\r\n        }\r\n    }\r\n}\r\n\r\nlet __RadvisController;\r\nlet __ParellelController;\r\n\r\n\r\nfunction createRadvis() {\r\n    let stats;\r\n    let renderer, controls;\r\n    let group, scene, camera, container;\r\n\r\n    function init() {\r\n        container = document.getElementById('renderer');\r\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 4000);\r\n        camera.position.z = 1500;\r\n        camera.position.y = 150;\r\n        camera.lookAt(0, 0, 0);\r\n\r\n        // controls = new THREE.OrbitControls( camera, container );\r\n        scene = new THREE.Scene();\r\n        __RadvisController = new RadvisController(scene, __data);\r\n\r\n        renderer = new THREE.WebGLRenderer({antialias: true});\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n        container.appendChild(renderer.domElement);\r\n\r\n        //scene.add(group);\r\n\r\n        controls = new THREE.OrbitControls(camera, renderer.domElement);\r\n        controls.enableZoom = true;\r\n\r\n        stats = new Stats();\r\n        console.log(stats.dom);\r\n        $(stats.dom).attr('id', 'radvisStats');\r\n        container.appendChild(stats.dom);\r\n    }\r\n\r\n    function render() {\r\n        controls.update();\r\n        __RadvisController.animate();\r\n        __RadvisController.geometryBasket.attributes.position.needsUpdate = true;\r\n        __RadvisController.geometryBasket.attributes.color.needsUpdate = true;\r\n\r\n        __RadvisController.geometryNodes.attributes.position.needsUpdate = true;\r\n        __RadvisController.geometryNodes.attributes.customColor.needsUpdate = true;\r\n        __RadvisController.geometryNodes.attributes.size.needsUpdate = true;\r\n\r\n        renderer.render(scene, camera);\r\n        stats.update();\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    init();\r\n    render();\r\n}\r\n"]}