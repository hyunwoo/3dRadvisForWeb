{"version":3,"sources":["../../src/radvis.data.js"],"names":["__data","DataAxis","name","index","stats","active","spacing","Setting","Radvis","Axis","Geometry","value","spacing_center","uniqueIndex","power","DataSet","csv","mode","_","isNil","injectCsv","replace","rows","split","keys","forEach","v","console","log","raw","map","row","transposRaw","TransposData","numeric","numericKeys","d","values","drop","Number","some","isNaN","min","max","sigma","stdDeviation","median","mean","average","toString","__Formatter","number","Test","AxisLimit","AxisLimitCount","push","numericNodes","i","length","out","k","axis","sortBy","axisName","find","matrix","col","$","get","data","createRadvis","__UI","injectData","createSideTab","click","Color","__RadvisController","updateAxisColor","THREE"],"mappings":"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","file":"radvis.data.js","sourcesContent":["/**\n * Created by hyunwoo on 2017-02-15.\n */\n\nlet __data;\n\n\nclass DataAxis {\n    constructor(name, index, stats) {\n        this.active = true;\n        this.name = name;\n        this.spacing = Setting.Radvis.Axis.Geometry.spacing.value;\n        this.spacing_center = Setting.Radvis.Axis.Geometry.spacing_center.value;\n        this.uniqueIndex = this.index = index;\n        this.stats = stats;\n        this.power = Setting.Radvis.Axis.Geometry.power.value;\n\n    }\n\n}\n\nclass DataSet {\n    constructor(csv, mode) {\n        if (_.isNil(mode) || mode == 'csv') this.injectCsv(csv);\n    }\n\n    injectCsv(csv) {\n        csv = csv.replace(/\\r?\\n|\\r/gi, '\\n');\n        var rows = csv.split('\\n');\n        this.keys = rows[0].split(',');\n        _.forEach(this.keys, function (v) {\n            console.log(v);\n        })\n        // this.keys = _.take(rows[0].split(','), 15);\n        this.raw = _.map(rows, function (row) {\n            return row.split(',');\n        });\n\n        this.transposRaw = DataSet.TransposData(this.raw);\n        var numeric = this.numeric = {};\n        var stats = this.stats = {};\n        var numericKeys = this.numericKeys = [];\n        _.forEach(this.transposRaw, function (d) {\n            var values = _.map(_.drop(d), function (d) {\n                return Number(d);\n            });\n\n            if (_.some(values, function (v) {\n                    return isNaN(v);\n                })) return;\n\n            stats[d[0]] = {\n                value: values,\n                min: _.min(values),\n                max: _.max(values),\n                // variance: _.variance(values), // �л�\n                sigma: _.stdDeviation(values), // ǥ������\n                median: _.median(values), // �߾Ӱ�\n                mean: _.average(values),\n\n                toString: function () {\n                    return \"min: \" + __Formatter.number(this.min) + \"<br>\" +\n                        \"max: \" + __Formatter.number(this.max) + \"<br>\" +\n                        \"sigma: \" + __Formatter.number(this.sigma) + \"<br>\" +\n                        \"mean: \" + __Formatter.number(this.mean);\n                }\n            };\n            numeric[d[0]] = values;\n            // FOR TEST\n            if (Setting.Test.AxisLimit) {\n                if (Setting.Test.AxisLimitCount < 15)\n                    numericKeys.push(d[0]);\n            } else numericKeys.push(d[0]);\n\n        });\n\n\n        this.numericNodes = [];\n        for (var i = 0; i < numeric[numericKeys[0]].length; i++) {\n            var out = {};\n            _.forEach(this.numericKeys, function (k) {\n                out[k] = numeric[k][i];\n            });\n            this.numericNodes.push(out);\n        }\n\n        console.log(this.numericNodes);\n\n        this.axis = _.map(this.numericKeys, function (k, i) {\n            return new DataAxis(k, i, stats[k]);\n        });\n    }\n\n\n    getSortedAxis() {\n        return _.sortBy(this.axis, function (axis) {\n            return axis.index;\n        })\n    }\n\n    findAxis(axisName) {\n        return _.find(this.axis, function (axis) {\n            return axis.name == axisName;\n        })\n    }\n\n    static TransposData(matrix) {\n        return _.map(matrix[0], function (col, i) {\n            return _.map(matrix, function (row) {\n                return row[i];\n            })\n        })\n    }\n\n\n}\n\n\n$.get('/data/credos_testing.csv', function (data) {\n    __data = new DataSet(data);\n    //createAxisVisibility();\n    // Important! : Visualization Controlled based on Data\n    createRadvis();\n    __UI.injectData(__data);\n    __UI.createSideTab();\n    // create2DViewer();\n    //createParallel();\n});\n\n$(function () {\n    $('#axisColorApplier').click(function () {\n        Setting.Radvis.Axis.Color = 0xFF0000;\n        __RadvisController.updateAxisColor(new THREE.Color(Setting.Radvis.Axis.Color));\n    });\n});\n"]}