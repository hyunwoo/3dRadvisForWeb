{"version":3,"sources":["../../src/radvis.data.js"],"names":["__data","DataAxis","name","index","active","weight","DataSet","csv","mode","_","isNil","injectCsv","rows","split","keys","take","raw","map","row","transposRaw","TransposData","numeric","stats","numericKeys","forEach","d","values","drop","Number","some","v","isNaN","value","min","max","mean","average","length","push","numericNodes","i","out","k","console","log","axis","matrix","col","createAxisController","$item","$","appendTo","evt","Rx","Observable","fromEvent","subscribe","hasClass","removeClass","addClass","__RadvisController","adjustAxis","get","data","createRadvis","click","Setting","Radvis","Axis","Color","updateAxisColor","THREE"],"mappings":"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","file":"radvis.data.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-15.\r\n */\r\n\r\nlet __data;\r\n\r\nclass DataAxis {\r\n    constructor(name, index) {\r\n        this.active = true;\r\n        this.name = name;\r\n        this.weight = 1;\r\n        this.index = index;\r\n    }\r\n\r\n}\r\n\r\nclass DataSet {\r\n    constructor(csv, mode) {\r\n        if (_.isNil(mode) || mode == 'csv') this.injectCsv(csv);\r\n    }\r\n\r\n    injectCsv(csv) {\r\n        var rows = csv.split('\\n');\r\n        this.keys = _.take(rows[0].split(','), 15);\r\n        this.raw = _.map(rows, function (row) {\r\n            return row.split(',');\r\n        });\r\n        this.transposRaw = DataSet.TransposData(this.raw);\r\n        var numeric = this.numeric = {};\r\n        var stats = this.stats = {};\r\n        var numericKeys = this.numericKeys = [];\r\n        _.forEach(this.transposRaw, function (d) {\r\n            var values = _.map(_.drop(d), function (d) {\r\n                return Number(d);\r\n            });\r\n\r\n            if (_.some(values, function (v) {\r\n                    return isNaN(v);\r\n                })) return;\r\n\r\n            stats[d[0]] = {\r\n                value: values,\r\n                min: _.min(values),\r\n                max: _.max(values),\r\n                // variance: _.variance(values), // �л�\r\n                // sigma: _.stdDeviation(values), // ǥ������\r\n                // median: _.median(values), // �߾Ӱ�\r\n                mean: _.average(values),\r\n            };\r\n            numeric[d[0]] = values;\r\n            // FOR TEST\r\n            if (numericKeys.length < 15)\r\n                numericKeys.push(d[0]);\r\n        });\r\n\r\n\r\n        this.numericNodes = [];\r\n        for (var i = 0; i < numeric[numericKeys[0]].length; i++) {\r\n            var out = {};\r\n            _.forEach(this.numericKeys, function (k) {\r\n                out[k] = numeric[k][i];\r\n            });\r\n            this.numericNodes.push(out);\r\n        }\r\n        console.log(numericKeys)\r\n        this.axis = _.map(this.numericKeys, function (k, i) {\r\n            return new DataAxis(k, i);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    static TransposData(matrix) {\r\n        return _.map(matrix[0], function (col, i) {\r\n            return _.map(matrix, function (row) {\r\n                return row[i];\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nfunction createAxisController() {\r\n    _.forEach(__data.axis, function (d, i) {\r\n        console.log(d);\r\n        var $item = $('<div class=\"item click\">' +\r\n            d.name +\r\n            '</div>');\r\n        $item.appendTo('#AxisController');\r\n\r\n        var evt = Rx.Observable.fromEvent($item, 'click');\r\n        evt.subscribe(() => {\r\n            d.active = !$item.hasClass('click');\r\n            if (!d.active) $item.removeClass('click');\r\n            else $item.addClass('click');\r\n            __RadvisController.adjustAxis();\r\n        });\r\n    });\r\n}\r\n\r\n$.get('/data/credos_testing.csv', function (data) {\r\n    __data = new DataSet(data);\r\n    createAxisController();\r\n    // Important! : Visualization Controlled based on Data\r\n    createRadvis();\r\n    // create2DViewer();\r\n    //createParallel();\r\n});\r\n\r\n$(function () {\r\n    $('#axisColorApplier').click(function () {\r\n        Setting.Radvis.Axis.Color = 0xFF0000;\r\n        __RadvisController.updateAxisColor(new THREE.Color(Setting.Radvis.Axis.Color));\r\n    });\r\n});\r\n"]}