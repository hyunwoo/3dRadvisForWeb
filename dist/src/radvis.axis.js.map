{"version":3,"sources":["../../src/radvis.axis.js"],"names":["RadvisAxis","controller","axis","stats","_","assign","$name","$","name","appendTo","x","z","axisDestPosition","index","Setting","Radvis","Height","weightCurrent","weightSum","rad","color","ratio","active","Radius","THREE","Color","Axis","css","Background","Math","sin","PI","cos","setPosition","setColor","vector","RadvisController","projectPosition","camera","vertices","width","height","y","axisDestColor","r","g","b","val","min","max","v","Vector3","multiplyScalar","NodeScale"],"mappings":";;;;;;AAAA;;;;IAKMA,U;AACF,wBAAYC,UAAZ,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC;AAAA;;AACjC,aAAKF,UAAL,GAAkBA,UAAlB;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACAE,UAAEC,MAAF,CAAS,IAAT,EAAeF,KAAf;AACA;AACA,aAAKG,KAAL,GAAaC,EAAE,6BAA6B,KAAKL,IAAL,CAAUM,IAAvC,GAA8C,QAAhD,EAA0DC,QAA1D,CAAmER,WAAWM,CAA9E,CAAb;AACH;;;;oCAEWG,C,EAAGC,C,EAAG;AACd,iBAAKV,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAnD,IAAwDH,CAAxD;AACA,iBAAKT,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4D,CAACC,QAAQC,MAAR,CAAeC,MAAhB,GAAyB,CAArF;AACA,iBAAKf,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DF,CAA5D;AACA,iBAAKV,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DH,CAA5D;AACA,iBAAKT,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DC,QAAQC,MAAR,CAAeC,MAAf,GAAwB,CAApF;AACA,iBAAKf,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DF,CAA5D;AACH;;;uCAEcM,a,EAAeC,S,EAAW;;AAErC,gBAAIC,YAAJ;AAAA,gBAASC,cAAT;AAAA,gBAAgBV,UAAhB;AAAA,gBAAmBC,UAAnB;AAAA,gBAAsBU,QAAQJ,gBAAgBC,SAA9C;;AAEA,gBAAI,KAAKhB,IAAL,CAAUoB,MAAd,EAAsB;AAClBH,sBAAML,QAAQC,MAAR,CAAeQ,MAArB;AACAH,wBAAQ,IAAII,MAAMC,KAAV,CAAgBX,QAAQC,MAAR,CAAeW,IAAf,CAAoBD,KAApC,CAAR;AACA,qBAAKnB,KAAL,CAAWqB,GAAX,CAAe,SAAf,EAA0B,GAA1B;AACH,aAJD,MAIO;AACHR,sBAAML,QAAQC,MAAR,CAAeQ,MAAf,GAAwB,GAA9B;AACAH,wBAAQ,IAAII,MAAMC,KAAV,CAAgBX,QAAQC,MAAR,CAAea,UAA/B,CAAR;AACA,qBAAKtB,KAAL,CAAWqB,GAAX,CAAe,SAAf,EAA0B,GAA1B;AACH;;AAEDjB,gBAAImB,KAAKC,GAAL,CAASD,KAAKE,EAAL,GAAU,CAAV,GAAcV,KAAvB,IAAgCF,GAApC;AACAR,gBAAIkB,KAAKG,GAAL,CAASH,KAAKE,EAAL,GAAU,CAAV,GAAcV,KAAvB,IAAgCF,GAApC;;AAEA,iBAAKc,WAAL,CAAiBvB,CAAjB,EAAoBC,CAApB;AACA,iBAAKuB,QAAL,CAAcd,KAAd;AAEH;;;2CAEkB;AACf,gBAAIe,SAASC,iBAAiBC,eAAjB,CAAiC,KAAKpC,UAAL,CAAgBqC,MAAjD,EACT,KAAKrC,UAAL,CAAgBsC,QAAhB,CAAyB,KAAKrC,IAAL,CAAUW,KAAV,GAAkB,CAA3C,CADS,EAET,KAAKZ,UAAL,CAAgBsC,QAAhB,CAAyB,KAAKrC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAA/C,CAFS,EAGT,KAAKZ,UAAL,CAAgBsC,QAAhB,CAAyB,KAAKrC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAA/C,CAHS,EAIT,KAAKZ,UAAL,CAAgBuC,KAJP,EAKT,KAAKvC,UAAL,CAAgBwC,MALP,CAAb;;AAQA,iBAAKnC,KAAL,CAAWqB,GAAX,CAAe,MAAf,EAAuBQ,OAAOzB,CAAP,GAAW,KAAKJ,KAAL,CAAWkC,KAAX,KAAqB,CAAvD;AACA,iBAAKlC,KAAL,CAAWqB,GAAX,CAAe,KAAf,EAAsBQ,OAAOO,CAA7B;AACH;;;iCAEQtB,K,EAAO;AACZ,iBAAKnB,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAhD,IAAqDO,MAAMwB,CAA3D;AACA,iBAAK3C,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAApD,IAAyDO,MAAMyB,CAA/D;AACA,iBAAK5C,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAApD,IAAyDO,MAAM0B,CAA/D;AACA,iBAAK7C,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAApD,IAAyDO,MAAMwB,CAA/D;AACA,iBAAK3C,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAApD,IAAyDO,MAAMyB,CAA/D;AACA,iBAAK5C,UAAL,CAAgB0C,aAAhB,CAA8B,KAAKzC,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAApD,IAAyDO,MAAM0B,CAA/D;AACH;;;gCAuBOC,G,EAAK;AACT,gBAAI1B,QAAQ,CAAC0B,MAAM,KAAKC,GAAZ,KAAoB,KAAKC,GAAL,GAAW,KAAKD,GAApC,CAAZ;AACA,gBAAItC,IAAI,KAAKT,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAnD,IAAwDQ,KAAhE;AACA,gBAAIqB,IAAI,KAAKzC,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DQ,KAA5D,GACJ,KAAKpB,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,KAA6D,IAAIQ,KAAjE,CADJ;AAEA,gBAAIV,IAAI,KAAKV,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,IAA4DQ,KAApE;AACA,gBAAI6B,IAAI,IAAI1B,MAAM2B,OAAV,CAAkBzC,CAAlB,EAAqBgC,CAArB,EAAwB/B,CAAxB,EAA2ByC,cAA3B,CAA0CtC,QAAQC,MAAR,CAAesC,SAAzD,CAAR;AACA,mBAAOH,CAAP;AACH;;;4BA7BY;AACT,mBAAO1B,MAAM2B,OAAN,CACH,KAAKlD,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAnD,CADG,EAEH,KAAKZ,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,CAFG,EAGH,KAAKZ,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,CAHG,CAAP;AAKH;;;4BAES;AACN,mBAAOW,MAAM2B,OAAN,CACH,KAAKlD,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,CADG,EAEH,KAAKZ,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,CAFG,EAGH,KAAKZ,UAAL,CAAgBW,gBAAhB,CAAiC,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAAlB,GAAsB,CAAvD,CAHG,CAAP;AAKH;;;4BAEe,CAEf","file":"radvis.axis.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-16.\r\n */\r\n\r\n\r\nclass RadvisAxis {\r\n    constructor(controller, axis, stats) {\r\n        this.controller = controller;\r\n        this.axis = axis;\r\n        _.assign(this, stats);\r\n        // console.log(this.controller.$canvas);\r\n        this.$name = $('<div class=\"axisHeader\">' + this.axis.name + '</div>').appendTo(controller.$);\r\n    }\r\n\r\n    setPosition(x, z) {\r\n        this.controller.axisDestPosition[this.axis.index * 6] = x;\r\n        this.controller.axisDestPosition[this.axis.index * 6 + 1] = -Setting.Radvis.Height / 2;\r\n        this.controller.axisDestPosition[this.axis.index * 6 + 2] = z;\r\n        this.controller.axisDestPosition[this.axis.index * 6 + 3] = x;\r\n        this.controller.axisDestPosition[this.axis.index * 6 + 4] = Setting.Radvis.Height / 2;\r\n        this.controller.axisDestPosition[this.axis.index * 6 + 5] = z;\r\n    }\r\n\r\n    updatePosition(weightCurrent, weightSum) {\r\n\r\n        let rad, color, x, z, ratio = weightCurrent / weightSum;\r\n\r\n        if (this.axis.active) {\r\n            rad = Setting.Radvis.Radius;\r\n            color = new THREE.Color(Setting.Radvis.Axis.Color);\r\n            this.$name.css('opacity', 0.6)\r\n        } else {\r\n            rad = Setting.Radvis.Radius + 200;\r\n            color = new THREE.Color(Setting.Radvis.Background);\r\n            this.$name.css('opacity', 0.0)\r\n        }\r\n\r\n        x = Math.sin(Math.PI * 2 * ratio) * rad;\r\n        z = Math.cos(Math.PI * 2 * ratio) * rad;\r\n\r\n        this.setPosition(x, z);\r\n        this.setColor(color);\r\n\r\n    }\r\n\r\n    updateProjection() {\r\n        var vector = RadvisController.projectPosition(this.controller.camera,\r\n            this.controller.vertices[this.axis.index * 6],\r\n            this.controller.vertices[this.axis.index * 6 + 1],\r\n            this.controller.vertices[this.axis.index * 6 + 2],\r\n            this.controller.width,\r\n            this.controller.height\r\n        );\r\n\r\n        this.$name.css('left', vector.x - this.$name.width() / 2);\r\n        this.$name.css('top', vector.y);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.controller.axisDestColor[this.axis.index * 6] = color.r;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 1] = color.g;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 2] = color.b;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 3] = color.r;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 4] = color.g;\r\n        this.controller.axisDestColor[this.axis.index * 6 + 5] = color.b;\r\n    }\r\n\r\n    get bottom() {\r\n        return THREE.Vector3(\r\n            this.controller.axisDestPosition[this.axis.index * 6],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 1],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 2],\r\n        );\r\n    }\r\n\r\n    get top() {\r\n        return THREE.Vector3(\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 3],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 4],\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 5],\r\n        );\r\n    }\r\n\r\n    get topScreen() {\r\n\r\n    }\r\n\r\n\r\n    located(val) {\r\n        var ratio = (val - this.min) / (this.max - this.min);\r\n        var x = this.controller.axisDestPosition[this.axis.index * 6] * ratio;\r\n        var y = this.controller.axisDestPosition[this.axis.index * 6 + 1] * ratio +\r\n            this.controller.axisDestPosition[this.axis.index * 6 + 4] * (1 - ratio);\r\n        var z = this.controller.axisDestPosition[this.axis.index * 6 + 5] * ratio;\r\n        var v = new THREE.Vector3(x, y, z).multiplyScalar(Setting.Radvis.NodeScale);\r\n        return v;\r\n    }\r\n\r\n}\r\n\r\n"]}