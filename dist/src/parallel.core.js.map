{"version":3,"sources":["../../src/parallel.core.js"],"names":["ParallelCoordinate","scene","data","width","height","that","i","groupAxis","THREE","Group","geometryAxis","BufferGeometry","material","LineBasicMaterial","vertexColors","VertexColors","transparent","objects","axisLength","axis","length","axisDestPosition","Float32Array","axisDestColor","vertices","colors","indices","addAttribute","BufferAttribute","setDynamic","axises","_","forEach","a","name","ParallelAxis","stats","x","y","z","axisColor","Color","cnt","console","log","setColor","setTimeout","setPosition","computeBoundingSphere","push","setIndex","Uint16Array","axisMesh","Mesh","MeshBasicMaterial","visible","add","raycaster","Raycaster","linePrecision","mouse","Vector2","document","addEventListener","onDocumentMouseMove","event","preventDefault","clientX","clientY","Math","lerp","camera","updateMatrixWorld","setFromCamera","intersects","intersectObject","__ParellelController","create2DViewer","renderer","controls","group","container","init","getElementById","$renderer","$","OrthographicCamera","Scene","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","setClearColor","gammaInput","gammaOutput","appendChild","domElement","__data","render","animate","attributes","position","needsUpdate","color","raycast","requestAnimationFrame"],"mappings":"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","file":"parallel.core.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-17.\r\n */\r\nclass ParallelCoordinate {\r\n    constructor(scene, data, width, height) {\r\n        const that = this;\r\n        this.width = width;\r\n        this.height = height;\r\n        let i;\r\n        this.groupAxis = new THREE.Group();\r\n        this.geometryAxis = new THREE.BufferGeometry();\r\n        this.material = new THREE.LineBasicMaterial({\r\n            vertexColors: THREE.VertexColors,\r\n            transparent: true\r\n        });\r\n        this.objects = [];\r\n\r\n        this.axisLength = data.axis.length;\r\n        this.axisDestPosition = new Float32Array(this.axisLength * 6);\r\n        this.axisDestColor = new Float32Array(this.axisLength * 6);\r\n        this.vertices = new Float32Array(this.axisLength * 6);\r\n        this.colors = new Float32Array(this.axisLength * 6);\r\n\r\n        this.indices = [];\r\n        this.geometryAxis.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3).setDynamic(true));\r\n        this.geometryAxis.addAttribute('color', new THREE.BufferAttribute(this.colors, 3).setDynamic(true));\r\n\r\n        this.axises = {};\r\n        _.forEach(data.axis, function (a, i) {\r\n            that.axises[a.name] = new ParallelAxis(that, a, data.stats[a.name]);\r\n        });\r\n\r\n\r\n        let x, y, z;\r\n        var axisColor = new THREE.Color(0xffffff);\r\n\r\n        var cnt = 0;\r\n        console.log(that.axises);\r\n        _.forEach(that.axises, function (axis, i) {\r\n            cnt++;\r\n            // axis.setPosition(that.width / that.axisLength * cnt - that.width / 2 - that.width / that.axisLength * 0.5);\r\n            axis.setColor(axisColor);\r\n        });\r\n\r\n        setTimeout(function () {\r\n            var cnt = 0;\r\n            _.forEach(that.axises, function (axis, i) {\r\n                cnt++;\r\n                axis.setPosition(that.width / that.axisLength * cnt - that.width / 2 - that.width / that.axisLength * 0.5);\r\n                axis.setColor(axisColor);\r\n            });\r\n            that.geometryAxis.computeBoundingSphere();\r\n        }, 1000);\r\n\r\n\r\n        this.geometryAxis.computeBoundingSphere();\r\n        console.log('??');\r\n\r\n\r\n        for (i = 0; i < this.axisLength - 1; i++) {\r\n            this.indices.push(i * 2, i * 2 + 2, i * 2 + 1);\r\n            this.indices.push(i * 2 + 2, i * 2 + 3, i * 2 + 1);\r\n        }\r\n\r\n\r\n        this.geometryAxis.setIndex(new THREE.BufferAttribute(new Uint16Array(this.indices), 1));\r\n        this.axisMesh = new THREE.Mesh(this.geometryAxis, new THREE.MeshBasicMaterial({visible: true}));\r\n        this.objects.push(this.axisMesh);\r\n        console.log(this.axisMesh);\r\n        scene.add(this.axisMesh);\r\n\r\n        console.log(this.axisMesh);\r\n\r\n        // Raycast\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.raycaster.linePrecision = 13;\r\n        this.mouse = new THREE.Vector2();\r\n\r\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\r\n\r\n\r\n        function onDocumentMouseMove(event) {\r\n            event.preventDefault();\r\n            that.mouse.x = ( event.clientX / width ) * 2 - 1;\r\n            that.mouse.y = -( event.clientY / height ) * 2 + 1;\r\n        }\r\n\r\n    }\r\n\r\n    animate() {\r\n        let i;\r\n        for (i = 0; i < this.axisLength * 6; i++) {\r\n            this.vertices[i] = THREE.Math.lerp(this.vertices[i], this.axisDestPosition[i], 0.1);\r\n            this.colors[i] = THREE.Math.lerp(this.colors[i], this.axisDestColor[i], 0.1);\r\n        }\r\n    }\r\n\r\n    raycast(scene, camera) {\r\n        camera.updateMatrixWorld();\r\n        this.raycaster.setFromCamera(this.mouse, camera);\r\n        var intersects = this.raycaster.intersectObject(this.axisMesh);\r\n        if (intersects.length > 0) {\r\n            console.log(intersects[0])\r\n            console.log(\"??\")\r\n        }\r\n    }\r\n\r\n}\r\n\r\nlet __ParellelController;\r\nfunction create2DViewer() {\r\n    let stats;\r\n    let renderer, controls;\r\n    let group, scene, camera, container;\r\n\r\n    function init() {\r\n        container = document.getElementById('rendererParallel');\r\n        const $renderer = $('#rendererParallel');\r\n        const width = $renderer.width(), height = $renderer.height();\r\n\r\n\r\n        console.log(width, height);\r\n\r\n        camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, -1000, 1000);\r\n        scene = new THREE.Scene();\r\n        scene.add(camera);\r\n        renderer = new THREE.WebGLRenderer({antialias: true});\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        renderer.setSize(width, height);\r\n        renderer.setClearColor(0x20000000);\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n        container.appendChild(renderer.domElement);\r\n\r\n        __ParellelController = new ParallelCoordinate(scene, __data, width, height);\r\n\r\n\r\n        //scene.add(group);\r\n        // controls = new THREE.OrbitControls(camera, renderer.domElement);\r\n        // controls.enableZoom = true;\r\n\r\n\r\n        // stats = new Stats();\r\n        // $(stats.dom).attr('id', 'radvisStats');\r\n        // container.appendChild(stats.dom);\r\n    }\r\n\r\n    function render() {\r\n        // controls.update();\r\n        __ParellelController.animate();\r\n\r\n        __ParellelController.geometryAxis.attributes.position.needsUpdate = true;\r\n        __ParellelController.geometryAxis.attributes.color.needsUpdate = true;\r\n\r\n        __ParellelController.raycast(scene, camera);\r\n\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    init();\r\n    render();\r\n}\r\n\r\n"]}