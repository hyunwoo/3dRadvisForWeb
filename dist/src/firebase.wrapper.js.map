{"version":3,"sources":["../../src/firebase.wrapper.js"],"names":["config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","__Firebase","that","fb","firebase","initializeApp","auth","user","undefined","isSetReferences","EventName","ChildAdded","ChildRemoved","ChildChange","authChange","addAuthChangeFunction","evt","push","usageData","DBRefDimensionList","DBRefDataList","callbackEvents","callbackDimensions","DataList","DimensionFieldList","setUsageData","d","console","log","database","ref","uid","_id","once","then","snapshot","val","_","forEach","callback","v","event","on","addDimensionField","field","key","data","update","deleteDimensionField","releaseUsageData","isNil","off","storage","testDataUrl","providerGoogle","GoogleAuthProvider","onAuthStateChanged","$","html","displayName","initDBReferences","onDimension","unbind","error","remove","clearDBReferences","getDataList","signInWithGoogle","signInWithPopup","result","token","credential","accessToken","catch","errorCode","code","errorMessage","message","email","signInWithEmail","signOut","__UIStatic","Toast","open","window","location","getDataContent","deleteData","set","uploadData","f","refList","refRaw","updates","name","size","type","lastModified","overview","contents"],"mappings":"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","file":"firebase.wrapper.js","sourcesContent":["/**\r\n * Created by hyunwoo on 2017-02-16.\r\n */\r\nvar config = {\r\n    apiKey: \"AIzaSyBmWUxSYfDdIig4b_Nk_8zGW5VdDr1qY-M\",\r\n    authDomain: \"dradvis.firebaseapp.com\",\r\n    databaseURL: \"https://dradvis.firebaseio.com\",\r\n    storageBucket: \"dradvis.appspot.com\",\r\n    messagingSenderId: \"20687471588\"\r\n};\r\n\r\nlet __Firebase = new function () {\r\n    const that = this;\r\n\r\n    let fb = firebase.initializeApp(config);\r\n    let auth = fb.auth();\r\n    this.user = undefined;\r\n    let isSetReferences = false;\r\n\r\n    this.EventName = {\r\n        ChildAdded: 'child_added',\r\n        ChildRemoved: 'child_removed',\r\n        ChildChange: 'child_changed'\r\n    };\r\n\r\n\r\n    this.authChange = [];\r\n    this.addAuthChangeFunction = function (evt) {\r\n        that.authChange.push(evt);\r\n    };\r\n\r\n    let usageData;\r\n    let DBRefDimensionList;\r\n\r\n    let DBRefDataList;\r\n    let callbackEvents = {};\r\n    let callbackDimensions = {};\r\n    let DataList = this.DataList = {};\r\n    this.DimensionFieldList = {};\r\n\r\n\r\n    this.setUsageData = function (d) {\r\n        usageData = d;\r\n        console.log(\" Data & Dimension Event Injected\");\r\n        DBRefDimensionList = fb.database().ref(that.user.uid + '/list/' + d._id + '/dimension');\r\n\r\n        DBRefDimensionList.once('value').then(function (snapshot) {\r\n            console.log('once', snapshot.val())\r\n            that.DimensionFieldList[snapshot.val()._id] = snapshot.val();\r\n            const val = snapshot.val();\r\n            _.forEach(callbackDimensions[that.EventName.ChildAdded], function (callback) {\r\n                _.forEach(val, function (v) {\r\n                    callback(v);\r\n                })\r\n            })\r\n        });\r\n\r\n        _.forEach(that.EventName, function (event) {\r\n            console.log('Alloc Dimension Event : ' + event);\r\n            DBRefDimensionList.on(event, function (snapshot) {\r\n                console.log(event, snapshot.val())\r\n                switch (event) {\r\n                    case that.EventName.ChildAdded:\r\n                    case that.EventName.ChildChange:\r\n                        that.DimensionFieldList[snapshot.val()._id] = snapshot.val();\r\n                        break;\r\n                    case that.EventName.ChildRemoved:\r\n                        delete that.DimensionFieldList[snapshot.val()._id];\r\n                        break;\r\n                }\r\n\r\n                _.forEach(callbackDimensions[event], function (callback) {\r\n                    callback(snapshot.val());\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    this.addDimensionField = function (field) {\r\n        const key = DBRefDimensionList.push().key;\r\n        let data = {};\r\n        field['_id'] = key;\r\n        data[key] = field;\r\n        DBRefDimensionList.update(data);\r\n    };\r\n\r\n    this.deleteDimensionField = function (field) {\r\n        console.log('delete field : ', that.user.uid + '/list/' + field._id + '/dimension/' + field._id);\r\n        let data = {};\r\n        data[field._id] = null;\r\n        DBRefDimensionList.update(data);\r\n    };\r\n\r\n    this.releaseUsageData = function () {\r\n        usageData = null;\r\n        console.log(\"Data & Dimension Event Released\");\r\n        if (!_.isNil(DBRefDimensionList)) DBRefDimensionList.off();\r\n        callbackDimensions = {};\r\n        that.DimensionFieldList = {};\r\n    };\r\n    this.storage = firebase.storage();\r\n    this.testDataUrl = 'https://firebasestorage.googleapis.com/v0/b/dradvis.appspot.com/o/credos_testing.csv?alt=media&token=27152d59-bf4a-41cf-8658-1c3581c08c5e';\r\n    let providerGoogle = new firebase.auth.GoogleAuthProvider();\r\n    fb.auth().onAuthStateChanged(function (user) {\r\n        that.user = user;\r\n        if (user) {\r\n            console.log('auth changed', user);\r\n            $('.userName').html(user.displayName);\r\n            initDBReferences();\r\n            isSetReferences = true;\r\n        } else {\r\n        }\r\n        _.forEach(that.authChange, function (d) {\r\n            d(user);\r\n        });\r\n        // __UIStatic.onAuthChange(user);\r\n    });\r\n\r\n\r\n    function initDBReferences() {\r\n        if (isSetReferences) return;\r\n        isSetReferences = true;\r\n\r\n        DBRefDataList = fb.database().ref(that.user.uid + '/list');\r\n\r\n        _.forEach(that.EventName, function (evt) {\r\n            DBRefDataList.on(evt, function (snapshot) {\r\n                switch (evt) {\r\n                    case 'child_added' :\r\n                    case 'child_changed' :\r\n                        DataList[snapshot.val()._id] = snapshot.val();\r\n                        break;\r\n                    case 'child_removed':\r\n                        delete DataList[snapshot.val()._id];\r\n                        break;\r\n                }\r\n                _.forEach(callbackEvents[evt], function (callback) {\r\n                    callback(snapshot.val());\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    this.on = function (evt, callback) {\r\n        if (_.isNil(callbackEvents[evt])) callbackEvents[evt] = [];\r\n        callbackEvents[evt].push(callback);\r\n        return callback;\r\n    };\r\n\r\n    this.onDimension = function (evt, callback) {\r\n        if (_.isNil(callbackDimensions[evt])) callbackDimensions[evt] = [];\r\n        callbackDimensions[evt].push(callback);\r\n        return callback;\r\n    };\r\n\r\n    this.unbind = function (evt, callback) {\r\n        if (_.isNil(callbackEvents[evt])) {\r\n            console.error('event not binded');\r\n            return;\r\n        }\r\n        if (_.isNil(callback)) callbackEvents[evt] = [];\r\n        else if (!_.isNil(callback)) callbackEvents[evt] = _.remove(callbackEvents[evt], callback);\r\n    };\r\n\r\n\r\n    function clearDBReferences() {\r\n\r\n    }\r\n\r\n    this.getDataList = function () {\r\n\r\n    };\r\n\r\n    this.signInWithGoogle = function () {\r\n        fb.auth().signInWithPopup(providerGoogle).then(function (result) {\r\n            var token = result.credential.accessToken;\r\n            var user = result.user;\r\n            // ...\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n        });\r\n    };\r\n\r\n    this.signInWithEmail = function () {\r\n\r\n    };\r\n\r\n    this.signOut = function () {\r\n        if (_.isNil(that.user)) {\r\n            __UIStatic.Toast.open(\"Auth Failed\");\r\n            return;\r\n        }\r\n\r\n        auth.signOut().then(function () {\r\n            that.user = undefined;\r\n            window.location = '/';\r\n        }, function (error) {\r\n            __UIStatic.Toast.open(\"SignOut Failed\");\r\n        });\r\n\r\n    };\r\n\r\n    this.getDataList = function () {\r\n        if (_.isNil(that.user)) {\r\n            __UIStatic.Toast.open(\"Auth Failed\");\r\n            return;\r\n        }\r\n    };\r\n\r\n\r\n    this.getDataContent = function (key) {\r\n        if (_.isNil(that.user)) {\r\n            __UIStatic.Toast.open(\"Auth Failed\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    this.deleteData = function (d) {\r\n        console.log('deleteData:', d);\r\n        var ref = fb.database().ref(that.user.uid + '/list/' + d._id);\r\n        ref.set(null);\r\n    };\r\n\r\n\r\n    this.uploadData = function (f) {\r\n        console.log('uploadFile!?');\r\n        if (_.isNil(that.user)) {\r\n            __UIStatic.Toast.open(\"Auth Failed\");\r\n            return;\r\n        }\r\n        const refList = fb.database().ref(that.user.uid + '/list');\r\n        const refRaw = fb.database().ref(that.user.uid + '/raw');\r\n        const key = refList.push().key;\r\n\r\n        var updates = {};\r\n        updates[that.user.uid + '/list/' + key] = {\r\n            name: f.name,\r\n            size: f.size,\r\n            type: f.type,\r\n            lastModified: f.lastModified,\r\n            _id: key,\r\n            overview: 'Not Yet Set Overview',\r\n        };\r\n\r\n        updates[that.user.uid + '/raw/' + key] = f.contents;\r\n        fb.database().ref().update(updates);\r\n    };\r\n\r\n};\r\n\r\n$(function () {\r\n    //__Firebase.getDataList()\r\n});\r\n\r\n\r\n\r\n\r\n"]}